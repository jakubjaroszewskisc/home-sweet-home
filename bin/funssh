#!/bin/bash

FUNSSH_ROOT=~/.funssh
SSH_CMD="ssh -o UserKnownHostsFile=/dev/null -o CheckHostIP=no -o StrictHostKeyChecking=no"

AWK_PARSE_SSH_KNOWN_HOSTS='
function parse(s) {
    if (match(s, /^[^:]+:/)) {
        # drop the port
        s = substr(s, RSTART, RLENGTH - 1);
    }
    if (match(s, /^\[[^\]]+\]$/)) {
        # drop the [ ] brackets
        s = substr(s, RSTART + 1, RLENGTH - 2)
    }
    if (match(s, /^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$/)) {
        ips[s] = 1;
    } else {
        names[s] = 1;
    }
}

/^[^ ]+ (ecdsa|ssh-rsa).*/ {
    for (key in names) {
        delete names[key];
    }
    for (key in ips) {
        delete ips[key];
    }
    x = $0;
    if (match(x, /^[^ ]+ /)) {
        x = substr(x, RSTART, RLENGTH - 1);

        while (match(x, /^[^,]+,/)) {
            to_parse = substr(x, RSTART, RLENGTH - 1);
            x = substr(x, RSTART + RLENGTH);
            parse(to_parse);
        }
        parse(x);

        all_names = "";
        # put all ips
        for (key in ips) {
            if (all_names) {
                all_names = (all_names " " key);
            } else {
                all_names = key;
            }
        }
        # put all names
        for (key in names) {
            if (all_names) {
                all_names = (all_names " " key);
            } else {
                all_names = key;
            }
        }
        print all_names;
    }
}
'

mkdir -p $FUNSSH_ROOT
if [ -f ~/.ssh/known_hosts ]; then
    awk "${AWK_PARSE_SSH_KNOWN_HOSTS}" ~/.ssh/known_hosts > $FUNSSH_ROOT/ssh_known_hosts
fi

HOST=$(cat $FUNSSH_ROOT/* | fzf | awk '{print $1}')
if [ -z $HOST ]; then
   exit 1
fi

$SSH_CMD $HOST $*
